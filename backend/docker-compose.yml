services:
  # Service Discovery (Eureka Server) - ESSENTIAL
  service-discovery:
    build:
      context: .
      dockerfile: service-discovery/Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - eckert-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8761/actuator/health", "||", "exit", "1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Config Server - ESSENTIAL
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    depends_on:
      - service-discovery
    networks:
      - eckert-network

  # API Gateway - ESSENTIAL (for i18n endpoints)
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    depends_on:
      - service-discovery
      - config-server
    networks:
      - eckert-network

  # PLACEHOLDER SERVICES - Commented out for now
  # Uncomment when needed for development

  # # PostgreSQL for User Service
  # postgres-user:
  #   image: postgres:16-alpine
  #   environment:
  #     - POSTGRES_DB=userdb
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - "5435:5432"
  #   volumes:
  #     - postgres-user-data:/var/lib/postgresql/data
  #   networks:
  #     - eckert-network

  # # User Service - PLACEHOLDER
  # user-service:
  #   build:
  #     context: .
  #     dockerfile: services/user-service/Dockerfile
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
  #   depends_on:
  #     - service-discovery
  #     - postgres-user
  #   networks:
  #     - eckert-network

networks:
  eckert-network:
    driver: bridge

# volumes:
  # Uncomment when placeholder services are enabled
  # postgres-user-data:
  # postgres-product-data:
  # postgres-order-data:
