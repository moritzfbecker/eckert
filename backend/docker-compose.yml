services:
  # Service Discovery (Eureka Server) - ESSENTIAL
  service-discovery:
    build:
      context: .
      dockerfile: service-discovery/Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - eckert-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8761/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Config Server - ESSENTIAL (Central Configuration Management)
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    depends_on:
      service-discovery:
        condition: service_healthy
    volumes:
      - config-data:/app/config  # Docker volume - persistent storage
    networks:
      - eckert-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8888/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # API Gateway - ESSENTIAL (for i18n endpoints)
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - eckert-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # PostgreSQL for User Service (DISABLED - use external DB)
  # postgres-user:
  #   image: postgres:16-alpine
  #   environment:
  #     - POSTGRES_DB=user_db
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-user-data:/var/lib/postgresql/data
  #   networks:
  #     - eckert-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # User Service (CRUD only - no auth) - DISABLED without PostgreSQL
  # user-service:
  #   build:
  #     context: .
  #     dockerfile: services/user-service/Dockerfile
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
  #     - CONFIG_SERVER_URL=http://config-server:8888
  #     - DB_HOST=postgres-user
  #     - DB_PORT=5432
  #     - DB_NAME=user_db
  #     - DB_USERNAME=postgres
  #     - DB_PASSWORD=postgres
  #   depends_on:
  #     - service-discovery
  #     - config-server
  #     - postgres-user
  #   networks:
  #     - eckert-network

  # Email Service (Generic SMTP Util)
  email-service:
    build:
      context: .
      dockerfile: services/email-service/Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - CONFIG_SERVER_URL=http://config-server:8888
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - eckert-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8084/actuator/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Auth Service (JWT + Config API v2.0) - DISABLED without user-service
  # auth-service:
  #   build:
  #     context: .
  #     dockerfile: services/auth-service/Dockerfile
  #   ports:
  #     - "8082:8082"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=docker
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
  #     - CONFIG_SERVER_URL=http://config-server:8888
  #   depends_on:
  #     - service-discovery
  #     - config-server
  #     - user-service
  #     - email-service
  #   networks:
  #     - eckert-network

  # Frontend (React + Nginx)
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "8090:80"  # External 8090, Internal 80 (Port 80 already in use by main site)
    depends_on:
      api-gateway:
        condition: service_healthy
    networks:
      - eckert-network
    restart: unless-stopped

networks:
  eckert-network:
    driver: bridge

volumes:
  # Config Server persistent storage for configuration files
  config-data:
  # PostgreSQL persistent storage
  postgres-user-data:
