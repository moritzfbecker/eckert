version: '3.8'

services:
  # Service Discovery (Eureka Server)
  service-discovery:
    build:
      context: .
      dockerfile: service-discovery/Dockerfile
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - eckert-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Config Server
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - eckert-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    depends_on:
      - service-discovery
      - config-server
    networks:
      - eckert-network

  # PostgreSQL for User Service
  postgres-user:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    networks:
      - eckert-network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: services/user-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/userdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - service-discovery
      - postgres-user
    networks:
      - eckert-network

  # PostgreSQL for Product Service
  postgres-product:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=productdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-product-data:/var/lib/postgresql/data
    networks:
      - eckert-network

  # Product Service
  product-service:
    build:
      context: .
      dockerfile: services/product-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-product:5432/productdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - service-discovery
      - postgres-product
    networks:
      - eckert-network

  # PostgreSQL for Order Service
  postgres-order:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=orderdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    volumes:
      - postgres-order-data:/var/lib/postgresql/data
    networks:
      - eckert-network

  # Order Service
  order-service:
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5432/orderdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - service-discovery
      - postgres-order
    networks:
      - eckert-network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
    depends_on:
      - service-discovery
    networks:
      - eckert-network

networks:
  eckert-network:
    driver: bridge

volumes:
  postgres-user-data:
  postgres-product-data:
  postgres-order-data:
